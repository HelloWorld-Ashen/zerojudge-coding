#include <iostream>
#include <vector>
#include <string>
#include <cstdlib>
using namespace std;

string intToRoman(int num) {
    vector<pair<int, string>> table = {
        {1000, "M"}, {900, "CM"}, {500, "D"}, {400, "CD"},
        {100, "C"}, {90, "XC"}, {50, "L"}, {40, "XL"},
        {10, "X"}, {9, "IX"}, {5, "V"}, {4, "IV"}, {1, "I"}
    };

    string res;
    for (auto &p : table) {
        while (num >= p.first) {
            res += p.second;
            num -= p.first;
        }
    }
    return res;
}

int main()
{//羅馬數字絕對值相減
    string x, y;
    int A[100], a=0, B[100], b=0,
    i=0, j=0;

    while(cin >> x )
    {
        if(x=="#"){exit(0);}
        cin >> y;
        a=0;b=0;
        for(i=0;i<x.size();i++)
        {
          switch(x[i])
        {
            case 'I':A[i]=1; break;
            case 'V':A[i]=5; break;
            case 'X':A[i]=10; break;
            case 'L':A[i]=50; break;
            case 'C':A[i]=100; break;
            case 'D':A[i]=500; break;
            case 'M':A[i]=1000; break;
        }

        if(i>0&&A[i-1]<A[i])
        {
            a=a-A[i-1];
        }

        if(i>0&&A[i-1]>=A[i])
        {
            a=a+A[i-1];
        }
    }
    a=a+A[x.size()-1];

    for(j=0;j<y.size();j++)
    {
        switch(y[j])
        {
            case 'I':B[j]=1; break;
            case 'V':B[j]=5; break;
            case 'X':B[j]=10; break;
            case 'L':B[j]=50; break;
            case 'C':B[j]=100; break;
            case 'D':B[j]=500; break;
            case 'M':B[j]=1000; break;
        }

        if(j>0&&B[j-1]<B[j])
        {
            b=b-B[j-1];
        }

                if(j>0&&B[j-1]>=B[j])
                {
                    b=b+B[j-1];
                }
        }
        b=b+B[y.size()-1];

        int k=0;
        if(a<b)
        {
            k=a;
            a=b;
            b=k;
        }

        int sub=0;
        sub=a-b;


        if(sub==0){cout << "ZERO" << endl;}
        else cout <<  intToRoman(sub) << endl;
    }

    getchar();
	getchar();
	return 0;
}
